import { ensureElementInBody, hydrateElement } from '../util/util';
let alertId = 0;
export class AlertController {
    create(opts) {
        return getAlertProxy(opts);
    }
}
export function getAlertProxy(opts) {
    return {
        id: alertId++,
        state: PRESENTING,
        opts: opts,
        present: function () { return present(this); },
        dismiss: function () { return dismiss(this); }
    };
}
export function present(alertProxy) {
    return loadOverlay(alertProxy.opts).then((alertElement) => {
        if (alertProxy.state === PRESENTING) {
            return alertElement.present();
        }
    });
}
export function dismiss(alertProxy) {
    return loadOverlay(alertProxy.opts).then((alertElement) => {
        if (alertProxy.state === DISMISSING) {
            return alertElement.dismiss();
        }
    });
}
export function loadOverlay(opts) {
    const element = ensureElementInBody('ion-alert-controller');
    return hydrateElement(element).then(() => {
        return element.create(opts);
    });
}
export const PRESENTING = 1;
export const DISMISSING = 2;
//# sourceMappingURL=alert-controller.js.map