import { ChangeDetectorRef, Component, ComponentFactoryResolver, Injector, InjectionToken, NgZone, ReflectiveInjector, ViewContainerRef, ViewChild } from '@angular/core';
import { NavController } from '@ionic/core';
import { App } from '../providers/app';
import { NavController as InjectableNavController } from '../providers/nav-controller';
export class IonNavDelegate {
    constructor(crf, changeDetection, zone, injector) {
        this.crf = crf;
        this.changeDetection = changeDetection;
        this.zone = zone;
        this.injector = injector;
    }
    ngOnInit() {
        const controllerElement = document.querySelector('ion-nav-controller');
        controllerElement.delegate = this;
    }
    attachViewToDom(nav, enteringView) {
        return new Promise((resolve, reject) => {
            this.zone.run(() => {
                const componentProviders = ReflectiveInjector.resolve([
                    {
                        provide: NavControllerToken, useValue: nav.element,
                    },
                    {
                        provide: NavController, useFactory: provideNavControllerInjectable, deps: [NavControllerToken]
                    },
                    {
                        provide: AppToken, useValue: null,
                    },
                    {
                        provide: App, useFactory: provideAppInjectable, deps: [AppToken]
                    }
                ]);
                const componentFactory = this.crf.resolveComponentFactory(enteringView.component);
                const childInjector = ReflectiveInjector.fromResolvedProviders(componentProviders, this.viewport.parentInjector);
                const componentRef = componentFactory.create(childInjector, []);
                this.viewport.insert(componentRef.hostView, this.viewport.length);
                this.changeDetection.detectChanges();
                enteringView.componentFactory = componentFactory;
                enteringView.childInjector = childInjector;
                enteringView.componentRef = componentRef;
                enteringView.instance = componentRef.instance;
                enteringView.angularHostElement = componentRef.location.nativeElement;
                enteringView.element = componentRef.location.nativeElement.querySelector('ion-page');
                resolve();
            });
        });
    }
    removeViewFromDom(nav, viewController) {
        return new Promise((resolve, reject) => {
            this.zone.run(() => {
                viewController.componentRef.destroy();
                // (nav.element as HTMLElement).removeChild(viewController.angularHostElement);
                // (nav.element as HTMLElement).removeChild(viewController.angularHostElement);
                viewController.componentFactory = null;
                viewController.childInjector = null;
                viewController.componentRef = null;
                viewController.instance = null;
                viewController.angularHostElement = null;
                viewController.element = null;
                resolve();
            });
        });
    }
}
IonNavDelegate.decorators = [
    { type: Component, args: [{
                selector: 'ion-nav',
                template: `
    <div #viewport class="ng-nav-viewport"></div>
  `
            },] },
];
/** @nocollapse */
IonNavDelegate.ctorParameters = () => [
    { type: ComponentFactoryResolver, },
    { type: ChangeDetectorRef, },
    { type: NgZone, },
    { type: Injector, },
];
IonNavDelegate.propDecorators = {
    "viewport": [{ type: ViewChild, args: ['viewport', { read: ViewContainerRef },] },],
};
export const NavControllerToken = new InjectionToken('NavControllerToken');
export const ViewControllerToken = new InjectionToken('ViewControllerToken');
export const AppToken = new InjectionToken('AppToken');
export function provideNavControllerInjectable(element) {
    return new InjectableNavController(element);
}
export function provideAppInjectable() {
    const ionAppElement = document.querySelector('ion-app');
    return new App(ionAppElement);
}
//# sourceMappingURL=ion-nav.js.map