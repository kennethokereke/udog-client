{
  "components": [
    {
      "tag": "ion-action-sheet",
      "componentClass": "ActionSheet",
      "componentPath": "components/action-sheet/action-sheet.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/action-sheet/action-sheet.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/action-sheet/action-sheet.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animate",
          "type": "boolean"
        },
        {
          "name": "buttons",
          "type": "any"
        },
        {
          "name": "cssClass",
          "type": "string"
        },
        {
          "name": "enableBackdropDismiss",
          "type": "boolean"
        },
        {
          "name": "enterAnimation",
          "type": "any"
        },
        {
          "name": "leaveAnimation",
          "type": "any"
        },
        {
          "name": "subTitle",
          "type": "string"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "listeners": [
        {
          "event": "ionDismiss",
          "method": "onDismiss",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "dismiss"
        },
        {
          "name": "present"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionActionSheetDidDismiss"
        },
        {
          "event": "ionActionSheetDidLoad"
        },
        {
          "event": "ionActionSheetDidPresent"
        },
        {
          "event": "ionActionSheetDidUnload"
        },
        {
          "event": "ionActionSheetWillDismiss"
        },
        {
          "event": "ionActionSheetWillPresent"
        }
      ],
      "host": {
        "theme": "action-sheet"
      }
    },
    {
      "tag": "ion-action-sheet-controller",
      "componentClass": "ActionSheetController",
      "componentPath": "components/action-sheet-controller/action-sheet-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionActionSheetDidLoad",
          "method": "didLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionActionSheetDidUnload",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionActionSheetWillDismiss",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionActionSheetWillPresent",
          "method": "willPresent",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyup.escape",
          "method": "escapeKeyUp",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-alert",
      "componentClass": "Alert",
      "componentPath": "components/alert/alert.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/alert/alert.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/alert/alert.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animate",
          "type": "boolean"
        },
        {
          "name": "buttons",
          "type": "any"
        },
        {
          "name": "cssClass",
          "type": "string"
        },
        {
          "name": "enableBackdropDismiss",
          "type": "boolean"
        },
        {
          "name": "enterAnimation",
          "type": "any"
        },
        {
          "name": "inputs",
          "type": "any",
          "mutable": true
        },
        {
          "name": "leaveAnimation",
          "type": "any"
        },
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "subTitle",
          "type": "string"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "methods": [
        {
          "name": "dismiss"
        },
        {
          "name": "present"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionAlertDidDismiss"
        },
        {
          "event": "ionAlertDidLoad"
        },
        {
          "event": "ionAlertDidPresent"
        },
        {
          "event": "ionAlertDidUnload"
        },
        {
          "event": "ionAlertWillDismiss"
        },
        {
          "event": "ionAlertWillPresent"
        }
      ],
      "host": {
        "theme": "alert"
      }
    },
    {
      "tag": "ion-alert-controller",
      "componentClass": "AlertController",
      "componentPath": "components/alert-controller/alert-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionAlertDidLoad",
          "method": "didLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionAlertDidUnload",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionAlertWillDismiss",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionAlertWillPresent",
          "method": "willPresent",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyup.escape",
          "method": "escapeKeyUp",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-animation-controller",
      "componentClass": "AnimationControllerImpl",
      "componentPath": "components/animation-controller/animation-controller.js",
      "styles": {},
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-app",
      "componentClass": "App",
      "componentPath": "components/app/app.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/app/app.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/app/app.md.scss"
          ]
        }
      },
      "states": [
        {
          "name": "hoverCSS"
        },
        {
          "name": "modeCode"
        },
        {
          "name": "useRouter"
        }
      ],
      "listeners": [
        {
          "event": "body:navInit",
          "method": "registerRootNav",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "getActiveNavs"
        },
        {
          "name": "getNavByIdOrName"
        },
        {
          "name": "getRootNavs"
        },
        {
          "name": "isScrolling"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "hostElement": {
        "name": "element"
      },
      "host": {
        "theme": "app"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-avatar",
      "componentClass": "Avatar",
      "componentPath": "components/avatar/avatar.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/avatar/avatar.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/avatar/avatar.md.scss"
          ]
        }
      },
      "host": {
        "theme": "avatar"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-backdrop",
      "componentClass": "Backdrop",
      "componentPath": "components/backdrop/backdrop.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/backdrop/backdrop.scss"
          ]
        }
      }
    },
    {
      "tag": "ion-badge",
      "componentClass": "Badge",
      "componentPath": "components/badge/badge.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/badge/badge.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/badge/badge.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "badge"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-button",
      "componentClass": "Button",
      "componentPath": "components/button/button.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/button/button.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/button/button.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "buttonType",
          "type": "string"
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "expand",
          "type": "any"
        },
        {
          "name": "fill",
          "type": "any"
        },
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "round",
          "type": "boolean"
        },
        {
          "name": "size",
          "type": "any"
        },
        {
          "name": "strong",
          "type": "boolean"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "slot": "hasNamedSlots"
    },
    {
      "tag": "ion-buttons",
      "componentClass": "Buttons",
      "componentPath": "components/buttons/buttons.js",
      "styles": {},
      "hostElement": {
        "name": "el"
      },
      "host": {
        "theme": "bar-buttons"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-card",
      "componentClass": "Card",
      "componentPath": "components/card/card.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/card/card.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/card/card.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "card"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-card-content",
      "componentClass": "CardContent",
      "componentPath": "components/card-content/card-content.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/card-content/card-content.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/card-content/card-content.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "card-content"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-card-header",
      "componentClass": "CardHeader",
      "componentPath": "components/card-header/card-header.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/card-header/card-header.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/card-header/card-header.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "host": {
        "theme": "card-header"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-card-subtitle",
      "componentClass": "CardSubtitle",
      "componentPath": "components/card-subtitle/card-subtitle.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/card-subtitle/card-subtitle.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/card-subtitle/card-subtitle.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "card-subtitle"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-card-title",
      "componentClass": "CardTitle",
      "componentPath": "components/card-title/card-title.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/card-title/card-title.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/card-title/card-title.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "card-title"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-checkbox",
      "componentClass": "Checkbox",
      "componentPath": "components/checkbox/checkbox.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/checkbox/checkbox.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/checkbox/checkbox.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "checked",
          "method": "checkedChanged"
        },
        {
          "name": "disabled",
          "method": "disabledChanged"
        }
      ],
      "states": [
        {
          "name": "keyFocus"
        }
      ],
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionChange"
        },
        {
          "event": "ionFocus"
        },
        {
          "event": "ionStyle"
        }
      ],
      "host": {
        "theme": "checkbox"
      }
    },
    {
      "tag": "ion-chip",
      "componentClass": "Chip",
      "componentPath": "components/chip/chip.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/chip/chip.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/chip/chip.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "chip"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-chip-button",
      "componentClass": "ChipButton",
      "componentPath": "components/chip-button/chip-button.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/chip-button/chip-button.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/chip-button/chip-button.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "clear",
          "type": "boolean"
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-col",
      "componentClass": "Col",
      "componentPath": "components/col/col.js",
      "styles": {}
    },
    {
      "tag": "ion-content",
      "componentClass": "Content",
      "componentPath": "components/content/content.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/content/content.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/content/content.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "fullscreen",
          "type": "boolean"
        },
        {
          "name": "ionScroll",
          "type": "any"
        },
        {
          "name": "ionScrollEnd",
          "type": "any"
        },
        {
          "name": "ionScrollStart",
          "type": "any"
        }
      ],
      "listeners": [
        {
          "event": "body:ionNavChanged",
          "method": "onNavChanged",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "enableJsScroll"
        },
        {
          "name": "scrollToBottom"
        },
        {
          "name": "scrollToTop"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "slot": "hasNamedSlots"
    },
    {
      "tag": "ion-datetime",
      "componentClass": "Datetime",
      "componentPath": "components/datetime/datetime.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/datetime/datetime.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/datetime/datetime.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "cancelText",
          "type": "string"
        },
        {
          "name": "dayNames",
          "type": "any"
        },
        {
          "name": "dayShortNames",
          "type": "any"
        },
        {
          "name": "dayValues",
          "type": "any"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "displayFormat",
          "type": "string"
        },
        {
          "name": "doneText",
          "type": "string"
        },
        {
          "name": "hourValues",
          "type": "any"
        },
        {
          "name": "max",
          "type": "string",
          "mutable": true
        },
        {
          "name": "min",
          "type": "string",
          "mutable": true
        },
        {
          "name": "minuteValues",
          "type": "any"
        },
        {
          "name": "monthNames",
          "type": "any"
        },
        {
          "name": "monthShortNames",
          "type": "any"
        },
        {
          "name": "monthValues",
          "type": "any"
        },
        {
          "name": "pickerFormat",
          "type": "string"
        },
        {
          "name": "pickerOptions",
          "type": "any"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        },
        {
          "name": "yearValues",
          "type": "any"
        }
      ],
      "propsDidChange": [
        {
          "name": "value",
          "method": "valueChanged"
        }
      ],
      "states": [
        {
          "name": "text"
        }
      ],
      "connect": [
        {
          "name": "pickerCtrl",
          "tag": "ion-picker-controller"
        }
      ],
      "events": [
        {
          "event": "ionCancel"
        }
      ],
      "host": {
        "theme": "datetime"
      }
    },
    {
      "tag": "ion-fab",
      "componentClass": "Fab",
      "componentPath": "components/fab/fab.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/fab/fab.scss"
          ]
        }
      },
      "states": [
        {
          "name": "activated"
        }
      ],
      "methods": [
        {
          "name": "close"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-fab-button",
      "componentClass": "FabButton",
      "componentPath": "components/fab-button/fab-button.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/fab-button/fab-button.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/fab-button/fab-button.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "activated",
          "type": "boolean"
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "show",
          "type": "boolean"
        },
        {
          "name": "toggleActive",
          "type": "any"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "states": [
        {
          "name": "inContainer"
        },
        {
          "name": "inList"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-fab-list",
      "componentClass": "FabList",
      "componentPath": "components/fab-list/fab-list.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/fab-list/fab-list.scss"
          ]
        }
      },
      "props": [
        {
          "name": "activated",
          "type": "boolean"
        }
      ],
      "propsDidChange": [
        {
          "name": "activated",
          "method": "activatedChanged"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-footer",
      "componentClass": "Footer",
      "componentPath": "components/footer/footer.js",
      "styles": {},
      "props": [
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "host": {
        "theme": "footer"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-gesture",
      "componentClass": "Gesture",
      "componentPath": "components/gesture/gesture.js",
      "styles": {},
      "props": [
        {
          "name": "attachTo",
          "type": "any"
        },
        {
          "name": "autoBlockAll",
          "type": "boolean"
        },
        {
          "name": "block",
          "type": "string"
        },
        {
          "name": "canStart",
          "type": "any"
        },
        {
          "name": "direction",
          "type": "string"
        },
        {
          "name": "disableScroll",
          "type": "boolean"
        },
        {
          "name": "enabled",
          "type": "boolean"
        },
        {
          "name": "gestureName",
          "type": "string"
        },
        {
          "name": "gesturePriority",
          "type": "number"
        },
        {
          "name": "maxAngle",
          "type": "number"
        },
        {
          "name": "notCaptured",
          "type": "any"
        },
        {
          "name": "onEnd",
          "type": "any"
        },
        {
          "name": "onMove",
          "type": "any"
        },
        {
          "name": "onPress",
          "type": "any"
        },
        {
          "name": "onStart",
          "type": "any"
        },
        {
          "name": "onWillStart",
          "type": "any"
        },
        {
          "name": "threshold",
          "type": "number"
        },
        {
          "name": "type",
          "type": "string"
        }
      ],
      "propsDidChange": [
        {
          "name": "enabled",
          "method": "enabledChanged"
        },
        {
          "name": "block",
          "method": "blockChanged"
        }
      ],
      "listeners": [
        {
          "event": "document:mousemove",
          "method": "onMoveMove",
          "enabled": false,
          "capture": false
        },
        {
          "event": "document:mouseup",
          "method": "onMouseUp",
          "enabled": false,
          "capture": false
        },
        {
          "event": "mousedown",
          "method": "onMouseDown",
          "enabled": false,
          "capture": false
        },
        {
          "event": "touchcancel",
          "method": "onTouchCancel",
          "enabled": false,
          "capture": false
        },
        {
          "event": "touchend",
          "method": "onTouchEnd",
          "enabled": false,
          "capture": false
        },
        {
          "event": "touchmove",
          "method": "onTouchMove",
          "enabled": false,
          "capture": false
        },
        {
          "event": "touchstart",
          "method": "onTouchStart",
          "enabled": false,
          "capture": false
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionGestureEnd"
        },
        {
          "event": "ionGestureMove"
        },
        {
          "event": "ionGestureNotCaptured"
        },
        {
          "event": "ionGestureStart"
        },
        {
          "event": "ionPress"
        }
      ]
    },
    {
      "tag": "ion-gesture-controller",
      "componentClass": "GestureController",
      "componentPath": "components/gesture-controller/gesture-controller.js",
      "styles": {}
    },
    {
      "tag": "ion-grid",
      "componentClass": "Grid",
      "componentPath": "components/grid/grid.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/grid/grid.scss"
          ]
        }
      }
    },
    {
      "tag": "ion-header",
      "componentClass": "Header",
      "componentPath": "components/header/header.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/header/header.ios.scss"
          ]
        }
      },
      "props": [
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "host": {
        "theme": "header"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-icon",
      "componentClass": "Icon",
      "componentPath": "dependencies/icon/icon.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "dependencies/icon/icon.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "dependencies/icon/icon.md.scss"
          ]
        }
      },
      "assetPaths": [
        "dependencies/icon/svg"
      ],
      "props": [
        {
          "name": "ariaLabel",
          "type": "string"
        },
        {
          "name": "ios",
          "type": "string"
        },
        {
          "name": "md",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "states": [
        {
          "name": "svgContent"
        }
      ],
      "context": [
        {
          "name": "mode",
          "id": "mode"
        },
        {
          "name": "isServer",
          "id": "isServer"
        }
      ],
      "host": {
        "theme": "icon"
      }
    },
    {
      "tag": "ion-infinite-scroll",
      "componentClass": "InfiniteScroll",
      "componentPath": "components/infinite-scroll/infinite-scroll.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/infinite-scroll/infinite-scroll.scss"
          ]
        }
      },
      "props": [
        {
          "name": "enabled",
          "type": "boolean"
        },
        {
          "name": "position",
          "type": "string"
        },
        {
          "name": "threshold",
          "type": "string"
        }
      ],
      "propsDidChange": [
        {
          "name": "threshold",
          "method": "thresholdChanged"
        },
        {
          "name": "enabled",
          "method": "enabledChanged"
        }
      ],
      "states": [
        {
          "name": "isLoading"
        }
      ],
      "listeners": [
        {
          "event": "ionScroll",
          "method": "onScroll",
          "passive": false,
          "enabled": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "complete"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionInfinite"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-infinite-scroll-content",
      "componentClass": "InfiniteScrollContent",
      "componentPath": "components/infinite-scroll-content/infinite-scroll-content.js",
      "styles": {},
      "props": [
        {
          "name": "loadingSpinner",
          "type": "string",
          "mutable": true
        },
        {
          "name": "loadingText",
          "type": "string"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ]
    },
    {
      "tag": "ion-input",
      "componentClass": "Input",
      "componentPath": "components/input/input.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/input/input.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/input/input.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "accept",
          "type": "string"
        },
        {
          "name": "autocapitalize",
          "type": "string"
        },
        {
          "name": "autocomplete",
          "type": "string"
        },
        {
          "name": "autocorrect",
          "type": "string"
        },
        {
          "name": "autofocus",
          "type": "boolean"
        },
        {
          "name": "checked",
          "type": "boolean"
        },
        {
          "name": "clearInput",
          "type": "boolean"
        },
        {
          "name": "clearOnEdit",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "inputmode",
          "type": "string"
        },
        {
          "name": "max",
          "type": "string"
        },
        {
          "name": "maxlength",
          "type": "number"
        },
        {
          "name": "min",
          "type": "string"
        },
        {
          "name": "minlength",
          "type": "number"
        },
        {
          "name": "multiple",
          "type": "boolean"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "pattern",
          "type": "string"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "readonly",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "results",
          "type": "number"
        },
        {
          "name": "size",
          "type": "number"
        },
        {
          "name": "spellcheck",
          "type": "boolean"
        },
        {
          "name": "step",
          "type": "string"
        },
        {
          "name": "type",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "checked",
          "method": "checkedChanged"
        },
        {
          "name": "disabled",
          "method": "disabledChanged"
        },
        {
          "name": "value",
          "method": "valueChanged"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionFocus"
        },
        {
          "event": "ionStyle"
        }
      ],
      "host": {
        "theme": "input"
      }
    },
    {
      "tag": "ion-item",
      "componentClass": "Item",
      "componentPath": "components/item/item.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/item/item.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/item/item.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "states": [
        {
          "name": "hasStyleChange"
        }
      ],
      "listeners": [
        {
          "event": "ionStyle",
          "method": "itemStyle",
          "passive": false,
          "capture": false
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "slot": "hasNamedSlots"
    },
    {
      "tag": "ion-item-divider",
      "componentClass": "ItemDivider",
      "componentPath": "components/item-divider/item-divider.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/item-divider/item-divider.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/item-divider/item-divider.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "item item-divider"
      },
      "slot": "hasNamedSlots"
    },
    {
      "tag": "ion-item-option",
      "componentClass": "ItemOption",
      "componentPath": "components/item-option/item-option.js",
      "styles": {},
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "item-option"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-item-options",
      "componentClass": "ItemOptions",
      "componentPath": "components/item-options/item-options.js",
      "styles": {},
      "props": [
        {
          "name": "side",
          "type": "any"
        }
      ],
      "methods": [
        {
          "name": "fireSwipeEvent"
        },
        {
          "name": "isRightSide"
        },
        {
          "name": "width"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionSwipe"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-item-sliding",
      "componentClass": "ItemSliding",
      "componentPath": "components/item-sliding/item-sliding.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/item-sliding/item-sliding.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/item-sliding/item-sliding.md.scss"
          ]
        }
      },
      "states": [
        {
          "name": "state"
        }
      ],
      "methods": [
        {
          "name": "close"
        },
        {
          "name": "closeOpened"
        },
        {
          "name": "getOpenAmount"
        },
        {
          "name": "getSlidingPercent"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionDrag"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-keyboard-controller",
      "componentClass": "KeyboardController",
      "componentPath": "components/keyboard-controller/keyboard-controller.js",
      "styles": {},
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "events": [
        {
          "event": "keyboardDidHide"
        },
        {
          "event": "keyboardDidShow"
        },
        {
          "event": "keyboardWillHide"
        },
        {
          "event": "keyboardWillShow"
        }
      ]
    },
    {
      "tag": "ion-label",
      "componentClass": "Label",
      "componentPath": "components/label/label.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/label/label.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/label/label.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "fixed",
          "type": "boolean"
        },
        {
          "name": "floating",
          "type": "boolean"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "stacked",
          "type": "boolean"
        }
      ],
      "methods": [
        {
          "name": "getText"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionStyle"
        }
      ],
      "host": {
        "theme": "label"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-list",
      "componentClass": "List",
      "componentPath": "components/list/list.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/list/list.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/list/list.md.scss"
          ]
        }
      },
      "methods": [
        {
          "name": "closeSlidingItems"
        },
        {
          "name": "getOpenedItem"
        },
        {
          "name": "setOpenedItem"
        }
      ],
      "host": {
        "theme": "list"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-list-header",
      "componentClass": "ListHeader",
      "componentPath": "components/list-header/list-header.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/list-header/list-header.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/list-header/list-header.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "list-header"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-loading",
      "componentClass": "Loading",
      "componentPath": "components/loading/loading.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/loading/loading.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/loading/loading.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animate",
          "type": "boolean"
        },
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "cssClass",
          "type": "string"
        },
        {
          "name": "dismissOnPageChange",
          "type": "boolean"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "enterAnimation",
          "type": "any"
        },
        {
          "name": "leaveAnimation",
          "type": "any"
        },
        {
          "name": "showBackdrop",
          "type": "boolean"
        },
        {
          "name": "spinner",
          "type": "string"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "listeners": [
        {
          "event": "ionDismiss",
          "method": "onDismiss",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "dismiss"
        },
        {
          "name": "present"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionLoadingDidDismiss"
        },
        {
          "event": "ionLoadingDidLoad"
        },
        {
          "event": "ionLoadingDidPresent"
        },
        {
          "event": "ionLoadingDidUnload"
        },
        {
          "event": "ionLoadingWillDismiss"
        },
        {
          "event": "ionLoadingWillPresent"
        }
      ],
      "host": {
        "theme": "loading"
      }
    },
    {
      "tag": "ion-loading-controller",
      "componentClass": "LoadingController",
      "componentPath": "components/loading-controller/loading-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionLoadingDidLoad",
          "method": "didLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionLoadingDidUnload",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionLoadingWillDismiss",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionLoadingWillPresent",
          "method": "willPresent",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyup.escape",
          "method": "escapeKeyUp",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-menu",
      "componentClass": "Menu",
      "componentPath": "components/menu/menu.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/menu/menu.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/menu/menu.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "enabled",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "maxEdgeStart",
          "type": "number"
        },
        {
          "name": "menuId",
          "type": "string"
        },
        {
          "name": "persistent",
          "type": "boolean"
        },
        {
          "name": "side",
          "type": "any"
        },
        {
          "name": "swipeEnabled",
          "type": "boolean"
        },
        {
          "name": "type",
          "type": "string",
          "mutable": true
        }
      ],
      "propsWillChange": [
        {
          "name": "type",
          "method": "typeChanged"
        }
      ],
      "propsDidChange": [
        {
          "name": "enabled",
          "method": "enabledChanged"
        },
        {
          "name": "side",
          "method": "sideChanged"
        },
        {
          "name": "swipeEnabled",
          "method": "swipeEnabledChanged"
        }
      ],
      "listeners": [
        {
          "event": "body:click",
          "method": "onBackdropClick",
          "passive": false,
          "enabled": false
        },
        {
          "event": "body:ionSplitPaneDidChange",
          "method": "splitPaneChanged",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "close"
        },
        {
          "name": "isOpen"
        },
        {
          "name": "open"
        },
        {
          "name": "setOpen"
        },
        {
          "name": "toggle"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "lazyMenuCtrl",
          "tag": "ion-menu-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionClose"
        },
        {
          "event": "ionDrag"
        },
        {
          "event": "ionOpen"
        }
      ],
      "host": {
        "theme": "menu"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-menu-controller",
      "componentClass": "MenuController",
      "componentPath": "components/menu-controller/menu-controller.js",
      "styles": {},
      "methods": [
        {
          "name": "_register"
        },
        {
          "name": "_setActiveMenu"
        },
        {
          "name": "_unregister"
        },
        {
          "name": "close"
        },
        {
          "name": "createAnimation"
        },
        {
          "name": "enable"
        },
        {
          "name": "get"
        },
        {
          "name": "getMenus"
        },
        {
          "name": "getOpen"
        },
        {
          "name": "isAnimating"
        },
        {
          "name": "isEnabled"
        },
        {
          "name": "isOpen"
        },
        {
          "name": "open"
        },
        {
          "name": "swipeEnable"
        },
        {
          "name": "toggle"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ]
    },
    {
      "tag": "ion-modal",
      "componentClass": "Modal",
      "componentPath": "components/modal/modal.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/modal/modal.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/modal/modal.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animate",
          "type": "boolean"
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "component",
          "type": "any"
        },
        {
          "name": "cssClass",
          "type": "string"
        },
        {
          "name": "data",
          "type": "any"
        },
        {
          "name": "delegate",
          "type": "any",
          "mutable": true
        },
        {
          "name": "enableBackdropDismiss",
          "type": "boolean"
        },
        {
          "name": "enterAnimation",
          "type": "any"
        },
        {
          "name": "leaveAnimation",
          "type": "any"
        },
        {
          "name": "modalId",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "string"
        },
        {
          "name": "showBackdrop",
          "type": "boolean"
        }
      ],
      "listeners": [
        {
          "event": "ionDismiss",
          "method": "onDismiss",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "dismiss"
        },
        {
          "name": "getUserComponentContainer"
        },
        {
          "name": "present"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionModalDidDismiss"
        },
        {
          "event": "ionModalDidLoad"
        },
        {
          "event": "ionModalDidPresent"
        },
        {
          "event": "ionModalDidUnload"
        },
        {
          "event": "ionModalWillDismiss"
        },
        {
          "event": "ionModalWillPresent"
        }
      ],
      "host": {
        "theme": "modal"
      }
    },
    {
      "tag": "ion-modal-controller",
      "componentClass": "ModalController",
      "componentPath": "components/modal-controller/modal-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionModalDidLoad",
          "method": "modalDidLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionModalDidUnload",
          "method": "modalWillDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionModalWillDismiss",
          "method": "modalWillDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionModalWillPresent",
          "method": "modalWillPresent",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyup.escape",
          "method": "escapeKeyUp",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-nav",
      "componentClass": "Nav",
      "componentPath": "components/nav/nav.js",
      "styles": {},
      "props": [
        {
          "name": "delegate",
          "type": "any"
        },
        {
          "name": "mode",
          "type": "string"
        },
        {
          "name": "root",
          "type": "any"
        }
      ],
      "listeners": [
        {
          "event": "navInit",
          "method": "navInitialized",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "canGoBack"
        },
        {
          "name": "canSwipeBack"
        },
        {
          "name": "getActive"
        },
        {
          "name": "getFirstView"
        },
        {
          "name": "getPrevious"
        },
        {
          "name": "getRoutes"
        },
        {
          "name": "getState"
        },
        {
          "name": "insert"
        },
        {
          "name": "insertPages"
        },
        {
          "name": "pop"
        },
        {
          "name": "popTo"
        },
        {
          "name": "popToRoot"
        },
        {
          "name": "push"
        },
        {
          "name": "removeIndex"
        },
        {
          "name": "removeView"
        },
        {
          "name": "resize"
        },
        {
          "name": "setPages"
        },
        {
          "name": "setRoot"
        },
        {
          "name": "setRouteId"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "element"
      },
      "events": [
        {
          "event": "ionNavChanged"
        },
        {
          "event": "navInit"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-navbar",
      "componentClass": "Navbar",
      "componentPath": "components/navbar/navbar.js",
      "styles": {},
      "props": [
        {
          "name": "backButtonIcon",
          "type": "string"
        },
        {
          "name": "backButtonText",
          "type": "string"
        },
        {
          "name": "hidden",
          "type": "boolean"
        },
        {
          "name": "hideBackButton",
          "type": "boolean"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "host": {
        "theme": "toolbar"
      },
      "slot": "hasNamedSlots"
    },
    {
      "tag": "ion-note",
      "componentClass": "Note",
      "componentPath": "components/note/note.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/note/note.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/note/note.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        }
      ],
      "host": {
        "theme": "note"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-page",
      "componentClass": "Page",
      "componentPath": "components/page/page.js",
      "styles": {},
      "slot": "hasSlots"
    },
    {
      "tag": "ion-picker",
      "componentClass": "Picker",
      "componentPath": "components/picker/picker.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/picker/picker.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/picker/picker.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animate",
          "type": "boolean"
        },
        {
          "name": "buttons",
          "type": "any"
        },
        {
          "name": "columns",
          "type": "any"
        },
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "cssClass",
          "type": "string"
        },
        {
          "name": "dismissOnPageChange",
          "type": "boolean"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "enableBackdropDismiss",
          "type": "boolean"
        },
        {
          "name": "enterAnimation",
          "type": "any"
        },
        {
          "name": "leaveAnimation",
          "type": "any"
        },
        {
          "name": "pickerId",
          "type": "string"
        },
        {
          "name": "showBackdrop",
          "type": "boolean"
        }
      ],
      "states": [
        {
          "name": "showSpinner"
        },
        {
          "name": "spinner"
        }
      ],
      "listeners": [
        {
          "event": "ionDismiss",
          "method": "onDismiss",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "addButton"
        },
        {
          "name": "addColumn"
        },
        {
          "name": "dismiss"
        },
        {
          "name": "getColumn"
        },
        {
          "name": "getColumns"
        },
        {
          "name": "present"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionPickerDidDismiss"
        },
        {
          "event": "ionPickerDidLoad"
        },
        {
          "event": "ionPickerDidPresent"
        },
        {
          "event": "ionPickerDidUnload"
        },
        {
          "event": "ionPickerWillDismiss"
        },
        {
          "event": "ionPickerWillPresent"
        }
      ],
      "host": {
        "theme": "picker"
      }
    },
    {
      "tag": "ion-picker-column",
      "componentClass": "PickerColumnCmp",
      "componentPath": "components/picker-column/picker-column.js",
      "styles": {},
      "props": [
        {
          "name": "col",
          "type": "any"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "host": {
        "theme": "picker-col"
      }
    },
    {
      "tag": "ion-picker-controller",
      "componentClass": "PickerController",
      "componentPath": "components/picker-controller/picker-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionPickerDidLoad",
          "method": "didLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionPickerDidUnload",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionPickerWillDismiss",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionPickerWillPresent",
          "method": "willPresent",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyup.escape",
          "method": "escapeKeyUp",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-popover",
      "componentClass": "Popover",
      "componentPath": "components/popover/popover.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/popover/popover.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/popover/popover.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animate",
          "type": "boolean"
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "component",
          "type": "string"
        },
        {
          "name": "cssClass",
          "type": "string"
        },
        {
          "name": "data",
          "type": "any"
        },
        {
          "name": "delegate",
          "type": "any",
          "mutable": true
        },
        {
          "name": "enableBackdropDismiss",
          "type": "boolean"
        },
        {
          "name": "enterAnimation",
          "type": "any"
        },
        {
          "name": "ev",
          "type": "any"
        },
        {
          "name": "leaveAnimation",
          "type": "any"
        },
        {
          "name": "mode",
          "type": "string"
        },
        {
          "name": "popoverId",
          "type": "string"
        },
        {
          "name": "showBackdrop",
          "type": "boolean"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "listeners": [
        {
          "event": "ionDismiss",
          "method": "onDismiss",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "dismiss"
        },
        {
          "name": "present"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionPopoverDidDismiss"
        },
        {
          "event": "ionPopoverDidLoad"
        },
        {
          "event": "ionPopoverDidPresent"
        },
        {
          "event": "ionPopoverDidUnload"
        },
        {
          "event": "ionPopoverWillDismiss"
        },
        {
          "event": "ionPopoverWillPresent"
        }
      ],
      "host": {
        "theme": "popover"
      }
    },
    {
      "tag": "ion-popover-controller",
      "componentClass": "PopoverController",
      "componentPath": "components/popover-controller/popover-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionPopoverDidLoad",
          "method": "didLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionPopoverDidUnload",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionPopoverWillDismiss",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionPopoverWillPresent",
          "method": "willPresent",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyup.escape",
          "method": "escapeKeyUp",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-radio",
      "componentClass": "Radio",
      "componentPath": "components/radio/radio.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/radio/radio.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/radio/radio.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "color",
          "method": "colorChanged"
        },
        {
          "name": "checked",
          "method": "checkedChanged"
        },
        {
          "name": "disabled",
          "method": "disabledChanged"
        }
      ],
      "states": [
        {
          "name": "keyFocus"
        }
      ],
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionFocus"
        },
        {
          "event": "ionRadioDidLoad"
        },
        {
          "event": "ionRadioDidUnload"
        },
        {
          "event": "ionSelect"
        },
        {
          "event": "ionStyle"
        }
      ],
      "host": {
        "theme": "radio"
      }
    },
    {
      "tag": "ion-radio-group",
      "componentClass": "RadioGroup",
      "componentPath": "components/radio-group/radio-group.js",
      "styles": {},
      "props": [
        {
          "name": "allowEmptySelection",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "name",
          "type": "string",
          "mutable": true
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "value",
          "method": "valueChanged"
        }
      ],
      "states": [
        {
          "name": "labelId"
        }
      ],
      "listeners": [
        {
          "event": "ionRadioDidLoad",
          "method": "onRadioDidLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "ionRadioDidUnload",
          "method": "onRadioDidUnload",
          "passive": false,
          "capture": false
        },
        {
          "event": "ionSelect",
          "method": "onRadioSelect",
          "passive": false,
          "capture": false
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionChange"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-range",
      "componentClass": "Range",
      "componentPath": "components/range/range.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/range/range.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/range/range.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "debounce",
          "type": "number"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "dualKnobs",
          "type": "boolean"
        },
        {
          "name": "max",
          "type": "number"
        },
        {
          "name": "min",
          "type": "number"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "pin",
          "type": "boolean"
        },
        {
          "name": "snaps",
          "type": "boolean"
        },
        {
          "name": "step",
          "type": "number"
        },
        {
          "name": "value",
          "type": "any",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "disabled",
          "method": "disabledChanged"
        },
        {
          "name": "value",
          "method": "valueChanged"
        }
      ],
      "states": [
        {
          "name": "activeB"
        },
        {
          "name": "barL"
        },
        {
          "name": "barR"
        },
        {
          "name": "pressed"
        },
        {
          "name": "pressedA"
        },
        {
          "name": "pressedB"
        },
        {
          "name": "ratioA"
        },
        {
          "name": "ratioB"
        },
        {
          "name": "rect"
        },
        {
          "name": "ticks"
        },
        {
          "name": "valA"
        },
        {
          "name": "valB"
        }
      ],
      "listeners": [
        {
          "event": "ionDecrease",
          "method": "keyChng",
          "passive": false,
          "capture": false
        },
        {
          "event": "ionIncrease",
          "method": "keyChng",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "ratio"
        },
        {
          "name": "ratioUpper"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionChange"
        },
        {
          "event": "ionFocus"
        },
        {
          "event": "ionStyle"
        }
      ],
      "host": {
        "theme": "range"
      },
      "slot": "hasNamedSlots"
    },
    {
      "tag": "ion-range-knob",
      "componentClass": "RangeKnob",
      "componentPath": "components/range-knob/range-knob.js",
      "styles": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "knob",
          "type": "string"
        },
        {
          "name": "labelId",
          "type": "string"
        },
        {
          "name": "max",
          "type": "number"
        },
        {
          "name": "min",
          "type": "number"
        },
        {
          "name": "pin",
          "type": "boolean"
        },
        {
          "name": "pressed",
          "type": "boolean"
        },
        {
          "name": "ratio",
          "type": "number"
        },
        {
          "name": "val",
          "type": "number"
        }
      ],
      "listeners": [
        {
          "event": "keydown",
          "method": "handleKeyBoard",
          "passive": false,
          "capture": false
        }
      ],
      "events": [
        {
          "event": "ionDecrease"
        },
        {
          "event": "ionIncrease"
        }
      ]
    },
    {
      "tag": "ion-reorder",
      "componentClass": "Reorder",
      "componentPath": "components/reorder/reorder.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/reorder/reorder.scss"
          ]
        }
      },
      "states": [
        {
          "name": "hasContent"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "host": {
        "theme": "reorder"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-reorder-group",
      "componentClass": "ReorderGroup",
      "componentPath": "components/reorder-group/reorder-group.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/reorder-group/reorder-group.scss"
          ]
        }
      },
      "props": [
        {
          "name": "enabled",
          "type": "boolean"
        }
      ],
      "propsDidChange": [
        {
          "name": "enabled",
          "method": "enabledChanged"
        }
      ],
      "states": [
        {
          "name": "_actived"
        },
        {
          "name": "_enabled"
        },
        {
          "name": "_iconVisible"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "host": {
        "theme": "reorder-group"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-route",
      "componentClass": "Route",
      "componentPath": "components/route/route.js",
      "styles": {},
      "props": [
        {
          "name": "component",
          "type": "string"
        },
        {
          "name": "path",
          "type": "string"
        },
        {
          "name": "props",
          "type": "any"
        }
      ],
      "methods": [
        {
          "name": "getRoute"
        }
      ]
    },
    {
      "tag": "ion-route-link",
      "componentClass": "RouteLink",
      "componentPath": "components/route-link/route-link.js",
      "styles": {},
      "props": [
        {
          "name": "router",
          "type": "any"
        },
        {
          "name": "url",
          "type": "string"
        }
      ]
    },
    {
      "tag": "ion-router-controller",
      "componentClass": "RouterController",
      "componentPath": "components/router-controller/router-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionNavChanged",
          "method": "onNavChanged",
          "passive": false,
          "capture": false
        },
        {
          "event": "window:hashchange",
          "method": "onURLHashChanged",
          "passive": false,
          "capture": false
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ]
    },
    {
      "tag": "ion-row",
      "componentClass": "Row",
      "componentPath": "components/row/row.js",
      "styles": {}
    },
    {
      "tag": "ion-scroll",
      "componentClass": "Scroll",
      "componentPath": "components/scroll/scroll.js",
      "styles": {},
      "props": [
        {
          "name": "enabled",
          "type": "boolean"
        },
        {
          "name": "jsScroll",
          "type": "boolean"
        },
        {
          "name": "onionScroll",
          "type": "any"
        },
        {
          "name": "onionScrollEnd",
          "type": "any"
        },
        {
          "name": "onionScrollStart",
          "type": "any"
        }
      ],
      "propsDidChange": [
        {
          "name": "jsScroll",
          "method": "jsScrollChanged"
        }
      ],
      "listeners": [
        {
          "event": "scroll",
          "method": "onNativeScroll",
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "scrollToBottom"
        },
        {
          "name": "scrollToPoint"
        },
        {
          "name": "scrollToTop"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionScroll"
        },
        {
          "event": "ionScrollEnd"
        },
        {
          "event": "ionScrollStart"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-searchbar",
      "componentClass": "Searchbar",
      "componentPath": "components/searchbar/searchbar.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/searchbar/searchbar.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/searchbar/searchbar.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animated",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "autocomplete",
          "type": "string",
          "mutable": true
        },
        {
          "name": "autocorrect",
          "type": "string",
          "mutable": true
        },
        {
          "name": "cancelButtonText",
          "type": "string",
          "mutable": true
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": true
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": true
        },
        {
          "name": "showCancelButton",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "type",
          "type": "string",
          "mutable": true
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "states": [
        {
          "name": "activated"
        },
        {
          "name": "focused"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionCancel"
        },
        {
          "event": "ionClear"
        },
        {
          "event": "ionFocus"
        },
        {
          "event": "ionInput"
        }
      ],
      "host": {
        "theme": "searchbar"
      }
    },
    {
      "tag": "ion-segment",
      "componentClass": "Segment",
      "componentPath": "components/segment/segment.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/segment/segment.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/segment/segment.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "value",
          "method": "valueChanged"
        }
      ],
      "listeners": [
        {
          "event": "ionClick",
          "method": "segmentClick",
          "passive": false,
          "capture": false
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionChange"
        }
      ],
      "host": {
        "theme": "segment"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-segment-button",
      "componentClass": "SegmentButton",
      "componentPath": "components/segment-button/segment-button.js",
      "styles": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "states": [
        {
          "name": "activated"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionClick"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-select",
      "componentClass": "Select",
      "componentPath": "components/select/select.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/select/select.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/select/select.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "cancelText",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "interface",
          "type": "string"
        },
        {
          "name": "interfaceOptions",
          "type": "any"
        },
        {
          "name": "multiple",
          "type": "boolean"
        },
        {
          "name": "name",
          "type": "string",
          "mutable": true
        },
        {
          "name": "okText",
          "type": "string"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "selectedText",
          "type": "string"
        },
        {
          "name": "value",
          "type": "any",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "value",
          "method": "valueChanged"
        }
      ],
      "states": [
        {
          "name": "isExpanded"
        },
        {
          "name": "keyFocus"
        },
        {
          "name": "text"
        }
      ],
      "listeners": [
        {
          "event": "ionSelect",
          "method": "onSelect",
          "passive": false,
          "capture": false
        },
        {
          "event": "ionSelectOptionDidLoad",
          "method": "optLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "ionSelectOptionDidUnload",
          "method": "optUnload",
          "passive": false,
          "capture": false
        }
      ],
      "connect": [
        {
          "name": "actionSheetCtrl",
          "tag": "ion-action-sheet-controller"
        },
        {
          "name": "alertCtrl",
          "tag": "ion-alert-controller"
        },
        {
          "name": "popoverCtrl",
          "tag": "ion-popover-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionCancel"
        },
        {
          "event": "ionChange"
        },
        {
          "event": "ionFocus"
        }
      ],
      "host": {
        "theme": "select"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-select-option",
      "componentClass": "SelectOption",
      "componentPath": "components/select-option/select-option.js",
      "styles": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionSelectOptionDidLoad"
        },
        {
          "event": "ionSelectOptionDidUnload"
        }
      ],
      "host": {
        "theme": "select-option"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-select-popover",
      "componentClass": "SelectPopover",
      "componentPath": "components/select-popover/select-popover.js",
      "styles": {},
      "props": [
        {
          "name": "options",
          "type": "any"
        }
      ],
      "listeners": [
        {
          "event": "ionSelect",
          "method": "onSelect",
          "passive": false,
          "capture": false
        }
      ],
      "host": {
        "theme": "select-popover"
      }
    },
    {
      "tag": "ion-skeleton-text",
      "componentClass": "SkeletonText",
      "componentPath": "components/skeleton-text/skeleton-text.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/skeleton-text/skeleton-text.scss"
          ]
        }
      },
      "props": [
        {
          "name": "width",
          "type": "string"
        }
      ]
    },
    {
      "tag": "ion-slide",
      "componentClass": "Slide",
      "componentPath": "components/slide/slide.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/slide/slide.scss"
          ]
        }
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-slides",
      "componentClass": "Slides",
      "componentPath": "components/slides/slides.js",
      "styles": {
        "$": {
          "stylePaths": [
            "components/slides/slides.scss"
          ]
        }
      },
      "assetPaths": [
        "components/slides/vendor"
      ],
      "props": [
        {
          "name": "autoplay",
          "type": "number"
        },
        {
          "name": "control",
          "type": "any"
        },
        {
          "name": "direction",
          "type": "any"
        },
        {
          "name": "effect",
          "type": "string"
        },
        {
          "name": "initialSlide",
          "type": "number"
        },
        {
          "name": "keyboardControl",
          "type": "boolean"
        },
        {
          "name": "loop",
          "type": "boolean"
        },
        {
          "name": "pager",
          "type": "boolean"
        },
        {
          "name": "paginationType",
          "type": "string"
        },
        {
          "name": "parallax",
          "type": "boolean"
        },
        {
          "name": "slidesPerView",
          "type": "any"
        },
        {
          "name": "spaceBetween",
          "type": "number"
        },
        {
          "name": "speed",
          "type": "number"
        },
        {
          "name": "zoom",
          "type": "boolean"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionSlideDidChange"
        },
        {
          "event": "ionSlideDrag"
        },
        {
          "event": "ionSlideNextEnd"
        },
        {
          "event": "ionSlideNextStart"
        },
        {
          "event": "ionSlidePrevEnd"
        },
        {
          "event": "ionSlidePrevStart"
        },
        {
          "event": "ionSlideReachEnd"
        },
        {
          "event": "ionSlideReachStart"
        },
        {
          "event": "ionSlideTouchEnd"
        },
        {
          "event": "ionSlideTouchStart"
        },
        {
          "event": "ionSlideTransitionEnd"
        },
        {
          "event": "ionSlideTransitionStart"
        },
        {
          "event": "ionSlideWillChange"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-spinner",
      "componentClass": "Spinner",
      "componentPath": "components/spinner/spinner.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/spinner/spinner.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/spinner/spinner.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "paused",
          "type": "boolean"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "host": {
        "theme": "spinner"
      }
    },
    {
      "tag": "ion-split-pane",
      "componentClass": "SplitPane",
      "componentPath": "components/split-pane/split-pane.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/split-pane/split-pane.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/split-pane/split-pane.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "enabled",
          "type": "boolean"
        },
        {
          "name": "when",
          "type": "any"
        }
      ],
      "propsDidChange": [
        {
          "name": "when",
          "method": "whenChanged"
        }
      ],
      "states": [
        {
          "name": "visible"
        }
      ],
      "methods": [
        {
          "name": "isVisible"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionChange"
        },
        {
          "event": "ionSplitPaneDidChange"
        }
      ],
      "host": {
        "theme": "split-pane"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-tab",
      "componentClass": "Tab",
      "componentPath": "components/tab/tab.js",
      "styles": {},
      "props": [
        {
          "name": "badge",
          "type": "string"
        },
        {
          "name": "badgeStyle",
          "type": "string"
        },
        {
          "name": "btnId",
          "type": "string"
        },
        {
          "name": "enabled",
          "type": "boolean"
        },
        {
          "name": "icon",
          "type": "string"
        },
        {
          "name": "path",
          "type": "string"
        },
        {
          "name": "root",
          "type": "string"
        },
        {
          "name": "rootParams",
          "type": "any"
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "show",
          "type": "boolean"
        },
        {
          "name": "tabsHideOnSubPages",
          "type": "boolean"
        },
        {
          "name": "title",
          "type": "string"
        }
      ],
      "propsDidChange": [
        {
          "name": "selected",
          "method": "selectedChanged"
        }
      ],
      "states": [
        {
          "name": "active"
        },
        {
          "name": "init"
        }
      ],
      "methods": [
        {
          "name": "_setActive"
        },
        {
          "name": "getActive"
        },
        {
          "name": "getNav"
        },
        {
          "name": "getPath"
        },
        {
          "name": "goToRoot"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionSelect"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-tab-button",
      "componentClass": "TabButton",
      "componentPath": "components/tab-button/tab-button.js",
      "styles": {},
      "props": [
        {
          "name": "selected",
          "type": "boolean"
        },
        {
          "name": "tab",
          "type": "any"
        }
      ],
      "listeners": [
        {
          "event": "click",
          "method": "onClick",
          "passive": false,
          "capture": false
        }
      ],
      "events": [
        {
          "event": "ionTabbarClick"
        }
      ]
    },
    {
      "tag": "ion-tab-highlight",
      "componentClass": "TabHighlight",
      "componentPath": "components/tab-highlight/tab-highlight.js",
      "styles": {},
      "props": [
        {
          "name": "selectedTab",
          "type": "any"
        }
      ],
      "propsDidChange": [
        {
          "name": "selectedTab",
          "method": "selectedTabChanged"
        }
      ],
      "states": [
        {
          "name": "animated"
        },
        {
          "name": "transform"
        }
      ],
      "listeners": [
        {
          "event": "window:resize",
          "method": "onResize",
          "capture": false
        }
      ],
      "hostElement": {
        "name": "el"
      }
    },
    {
      "tag": "ion-tabbar",
      "componentClass": "Tabbar",
      "componentPath": "components/tabbar/tabbar.js",
      "styles": {},
      "props": [
        {
          "name": "highlight",
          "type": "boolean"
        },
        {
          "name": "layout",
          "type": "string"
        },
        {
          "name": "placement",
          "type": "string"
        },
        {
          "name": "selectedTab",
          "type": "any"
        },
        {
          "name": "tabs",
          "type": "any"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "states": [
        {
          "name": "hidden"
        }
      ],
      "listeners": [
        {
          "event": "body:keyboardWillHide",
          "method": "onKeyboardWillHide",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyboardWillShow",
          "method": "onKeyboardWillShow",
          "passive": false,
          "capture": false
        }
      ],
      "host": {
        "theme": "tabbar"
      }
    },
    {
      "tag": "ion-tabs",
      "componentClass": "Tabs",
      "componentPath": "components/tabs/tabs.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/tabs/tabs.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/tabs/tabs.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "tabbarHidden",
          "type": "boolean"
        },
        {
          "name": "tabbarHighlight",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "tabbarLayout",
          "type": "string",
          "mutable": true
        },
        {
          "name": "tabbarPlacement",
          "type": "string",
          "mutable": true
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "states": [
        {
          "name": "selectedTab"
        },
        {
          "name": "tabs"
        }
      ],
      "listeners": [
        {
          "event": "ionTabbarClick",
          "method": "tabChange",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "getByIndex"
        },
        {
          "name": "getIndex"
        },
        {
          "name": "getRoutes"
        },
        {
          "name": "getSelected"
        },
        {
          "name": "getState"
        },
        {
          "name": "getTabs"
        },
        {
          "name": "select"
        },
        {
          "name": "setRouteId"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionChange"
        },
        {
          "event": "ionNavChanged"
        }
      ],
      "slot": "hasSlots"
    },
    {
      "tag": "ion-textarea",
      "componentClass": "Textarea",
      "componentPath": "components/textarea/textarea.js",
      "styles": {},
      "props": [
        {
          "name": "autocapitalize",
          "type": "string"
        },
        {
          "name": "autocomplete",
          "type": "string"
        },
        {
          "name": "autofocus",
          "type": "boolean"
        },
        {
          "name": "clearOnEdit",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "cols",
          "type": "number"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "maxlength",
          "type": "number"
        },
        {
          "name": "minlength",
          "type": "number"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "readonly",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "rows",
          "type": "number"
        },
        {
          "name": "spellcheck",
          "type": "boolean"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        },
        {
          "name": "wrap",
          "type": "string"
        }
      ],
      "propsDidChange": [
        {
          "name": "disabled",
          "method": "disabledChanged"
        },
        {
          "name": "value",
          "method": "valueChanged"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionFocus"
        },
        {
          "event": "ionStyle"
        }
      ],
      "host": {
        "theme": "input"
      }
    },
    {
      "tag": "ion-thumbnail",
      "componentClass": "Thumbnail",
      "componentPath": "components/thumbnail/thumbnail.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/thumbnail/thumbnail.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/thumbnail/thumbnail.md.scss"
          ]
        }
      },
      "host": {
        "theme": "thumbnail"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-title",
      "componentClass": "ToolbarTitle",
      "componentPath": "components/title/title.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/title/title.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/title/title.md.scss"
          ]
        }
      },
      "host": {
        "theme": "title"
      },
      "slot": "hasSlots"
    },
    {
      "tag": "ion-toast",
      "componentClass": "Toast",
      "componentPath": "components/toast/toast.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/toast/toast.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/toast/toast.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "animate",
          "type": "boolean"
        },
        {
          "name": "closeButtonText",
          "type": "string"
        },
        {
          "name": "cssClass",
          "type": "string"
        },
        {
          "name": "dismissOnPageChange",
          "type": "boolean"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "enterAnimation",
          "type": "any"
        },
        {
          "name": "leaveAnimation",
          "type": "any"
        },
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "position",
          "type": "string"
        },
        {
          "name": "showCloseButton",
          "type": "boolean"
        },
        {
          "name": "toastId",
          "type": "string"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "listeners": [
        {
          "event": "ionDismiss",
          "method": "onDismiss",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "dismiss"
        },
        {
          "name": "present"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "connect": [
        {
          "name": "animationCtrl",
          "tag": "ion-animation-controller"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "events": [
        {
          "event": "ionToastDidDismiss"
        },
        {
          "event": "ionToastDidLoad"
        },
        {
          "event": "ionToastDidPresent"
        },
        {
          "event": "ionToastDidUnload"
        },
        {
          "event": "ionToastWillDismiss"
        },
        {
          "event": "ionToastWillPresent"
        }
      ],
      "host": {
        "theme": "toast"
      }
    },
    {
      "tag": "ion-toast-controller",
      "componentClass": "ToastController",
      "componentPath": "components/toast-controller/toast-controller.js",
      "styles": {},
      "listeners": [
        {
          "event": "body:ionToastDidLoad",
          "method": "didLoad",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionToastDidUnload",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionToastWillDismiss",
          "method": "willDismiss",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:ionToastWillPresent",
          "method": "willPresent",
          "passive": false,
          "capture": false
        },
        {
          "event": "body:keyup.escape",
          "method": "escapeKeyUp",
          "passive": false,
          "capture": false
        }
      ],
      "methods": [
        {
          "name": "create"
        }
      ]
    },
    {
      "tag": "ion-toggle",
      "componentClass": "Toggle",
      "componentPath": "components/toggle/toggle.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/toggle/toggle.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/toggle/toggle.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true
        }
      ],
      "propsDidChange": [
        {
          "name": "checked",
          "method": "checkedChanged"
        },
        {
          "name": "disabled",
          "method": "disabledChanged"
        }
      ],
      "states": [
        {
          "name": "activated"
        },
        {
          "name": "keyFocus"
        }
      ],
      "events": [
        {
          "event": "ionBlur"
        },
        {
          "event": "ionChange"
        },
        {
          "event": "ionFocus"
        },
        {
          "event": "ionStyle"
        }
      ],
      "host": {
        "theme": "toggle"
      }
    },
    {
      "tag": "ion-toolbar",
      "componentClass": "Toolbar",
      "componentPath": "components/toolbar/toolbar.js",
      "styles": {
        "ios": {
          "stylePaths": [
            "components/toolbar/toolbar.ios.scss"
          ]
        },
        "md": {
          "stylePaths": [
            "components/toolbar/toolbar.md.scss"
          ]
        }
      },
      "props": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "mode",
          "type": "any"
        },
        {
          "name": "translucent",
          "type": "boolean"
        }
      ],
      "context": [
        {
          "name": "config",
          "id": "config"
        }
      ],
      "hostElement": {
        "name": "el"
      },
      "host": {
        "theme": "toolbar"
      },
      "slot": "hasNamedSlots"
    }
  ],
  "bundles": [
    {
      "components": [
        "ion-action-sheet",
        "ion-action-sheet-controller"
      ]
    },
    {
      "components": [
        "ion-alert",
        "ion-alert-controller"
      ]
    },
    {
      "components": [
        "ion-animation-controller"
      ]
    },
    {
      "components": [
        "ion-app",
        "ion-content",
        "ion-footer",
        "ion-header",
        "ion-navbar",
        "ion-page",
        "ion-scroll",
        "ion-title",
        "ion-toolbar"
      ]
    },
    {
      "components": [
        "ion-avatar",
        "ion-badge",
        "ion-thumbnail"
      ]
    },
    {
      "components": [
        "ion-backdrop"
      ]
    },
    {
      "components": [
        "ion-button",
        "ion-buttons",
        "ion-icon"
      ]
    },
    {
      "components": [
        "ion-card",
        "ion-card-content",
        "ion-card-header",
        "ion-card-title"
      ]
    },
    {
      "components": [
        "ion-card-subtitle"
      ]
    },
    {
      "components": [
        "ion-checkbox"
      ]
    },
    {
      "components": [
        "ion-chip",
        "ion-chip-button"
      ]
    },
    {
      "components": [
        "ion-col",
        "ion-grid",
        "ion-row"
      ]
    },
    {
      "components": [
        "ion-datetime",
        "ion-picker",
        "ion-picker-column",
        "ion-picker-controller"
      ]
    },
    {
      "components": [
        "ion-fab",
        "ion-fab-list"
      ]
    },
    {
      "components": [
        "ion-fab-button"
      ]
    },
    {
      "components": [
        "ion-gesture"
      ]
    },
    {
      "components": [
        "ion-gesture-controller"
      ]
    },
    {
      "components": [
        "ion-infinite-scroll",
        "ion-infinite-scroll-content"
      ]
    },
    {
      "components": [
        "ion-input",
        "ion-textarea"
      ]
    },
    {
      "components": [
        "ion-item",
        "ion-item-divider",
        "ion-label",
        "ion-list",
        "ion-list-header",
        "ion-skeleton-text"
      ]
    },
    {
      "components": [
        "ion-item-option",
        "ion-item-options",
        "ion-item-sliding"
      ]
    },
    {
      "components": [
        "ion-keyboard-controller"
      ]
    },
    {
      "components": [
        "ion-loading",
        "ion-loading-controller"
      ]
    },
    {
      "components": [
        "ion-menu",
        "ion-menu-controller"
      ]
    },
    {
      "components": [
        "ion-modal",
        "ion-modal-controller"
      ]
    },
    {
      "components": [
        "ion-nav"
      ]
    },
    {
      "components": [
        "ion-note"
      ]
    },
    {
      "components": [
        "ion-popover",
        "ion-popover-controller"
      ]
    },
    {
      "components": [
        "ion-radio",
        "ion-radio-group"
      ]
    },
    {
      "components": [
        "ion-range",
        "ion-range-knob"
      ]
    },
    {
      "components": [
        "ion-reorder",
        "ion-reorder-group"
      ]
    },
    {
      "components": [
        "ion-route",
        "ion-router-controller"
      ]
    },
    {
      "components": [
        "ion-route-link"
      ]
    },
    {
      "components": [
        "ion-searchbar"
      ]
    },
    {
      "components": [
        "ion-segment",
        "ion-segment-button"
      ]
    },
    {
      "components": [
        "ion-select",
        "ion-select-option",
        "ion-select-popover"
      ]
    },
    {
      "components": [
        "ion-slide",
        "ion-slides"
      ]
    },
    {
      "components": [
        "ion-spinner"
      ]
    },
    {
      "components": [
        "ion-split-pane"
      ]
    },
    {
      "components": [
        "ion-tab",
        "ion-tab-button",
        "ion-tab-highlight",
        "ion-tabbar",
        "ion-tabs"
      ]
    },
    {
      "components": [
        "ion-toast",
        "ion-toast-controller"
      ]
    },
    {
      "components": [
        "ion-toggle"
      ]
    }
  ],
  "compiler": {
    "name": "@stencil/core",
    "version": "0.0.9-1",
    "typescriptVersion": "2.6.2"
  },
  "global": "global/ionic-global.js"
}